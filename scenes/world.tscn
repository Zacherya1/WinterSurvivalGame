[gd_scene load_steps=40 format=3 uid="uid://dttxk50l3h2d8"]

[ext_resource type="Texture2D" uid="uid://cwdxsad24uybe" path="res://assets/snowtexture.png" id="1_7tsvx"]
[ext_resource type="Script" path="res://scenes/world.gd" id="1_40num"]
[ext_resource type="PackedScene" uid="uid://bcb4yejph6lfj" path="res://player/player.tscn" id="2_yjn56"]
[ext_resource type="Texture2D" uid="uid://bjvcigvq204bw" path="res://addons/kenney_particle_pack/circle_05.png" id="3_cw5re"]
[ext_resource type="Resource" uid="uid://c5d6mx7btsjr1" path="res://test_inv.tres" id="3_owqpx"]
[ext_resource type="PackedScene" uid="uid://b7ler82uhkvkw" path="res://inventory/inventory.tscn" id="4_4m46i"]
[ext_resource type="Script" path="res://inventory/inventory_interface.gd" id="6_tqy0d"]
[ext_resource type="PackedScene" uid="uid://dvunxs4oytqx5" path="res://inventory/slot.tscn" id="8_4g01v"]
[ext_resource type="PackedScene" uid="uid://bcbcqdl2so53b" path="res://interactable/chest.tscn" id="9_sivul"]
[ext_resource type="FontFile" uid="uid://lypq04cnl56u" path="res://assets/RomanAntique.ttf" id="9_uk1qn"]
[ext_resource type="Texture2D" uid="uid://dvymjgbga160s" path="res://assets/blur.png" id="9_w7hk4"]
[ext_resource type="Script" path="res://inventory/inventory_data.gd" id="10_gnfx3"]
[ext_resource type="Resource" uid="uid://ccolf4m1fx4bg" path="res://item/items/Beans.tres" id="11_4eb8d"]
[ext_resource type="Script" path="res://inventory/slot_data.gd" id="12_ng3kk"]
[ext_resource type="PackedScene" uid="uid://dk2y2vsy1ifm3" path="res://item/pick_up/pick_up_beans.tscn" id="14_ir0xc"]
[ext_resource type="Script" path="res://item/item_data.gd" id="15_sw46l"]
[ext_resource type="PackedScene" uid="uid://bbyuy26pt30iq" path="res://item/pick_up/pick_up_hide.tscn" id="15_w78xu"]
[ext_resource type="Resource" uid="uid://c2byfcl8qmllm" path="res://item/items/ScrapHide.tres" id="17_8xu6p"]

[sub_resource type="Shader" id="Shader_8jql4"]
code = "
// NOTE: Shader automatically converted from Godot Engine 4.2.stable's ProceduralSkyMaterial.

shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;



void sky() {
	float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
	float c = (1.0 - v_angle / (PI * 0.5));
	vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
	sky *= sky_energy;

	if (LIGHT0_ENABLED) {
		float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT0_SIZE) {
			sky = LIGHT0_COLOR * LIGHT0_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
			sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT1_ENABLED) {
		float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT1_SIZE) {
			sky = LIGHT1_COLOR * LIGHT1_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
			sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT2_ENABLED) {
		float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT2_SIZE) {
			sky = LIGHT2_COLOR * LIGHT2_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
			sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	if (LIGHT3_ENABLED) {
		float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
		if (sun_angle < LIGHT3_SIZE) {
			sky = LIGHT3_COLOR * LIGHT3_ENERGY;
		} else if (sun_angle < sun_angle_max) {
			float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
			sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
		}
	}

	vec4 sky_cover_texture = texture(sky_cover, SKY_COORDS);
	sky += (sky_cover_texture.rgb * sky_cover_modulate.rgb) * sky_cover_texture.a * sky_cover_modulate.a * sky_energy;

	c = (v_angle - (PI * 0.5)) / (PI * 0.5);
	vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
	ground *= ground_energy;

	COLOR = mix(ground, sky, step(0.0, EYEDIR.y));
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4isa1"]
shader = SubResource("Shader_8jql4")
shader_parameter/sky_top_color = Color(0.0823529, 0.192157, 0.298039, 1)
shader_parameter/sky_horizon_color = Color(0.27451, 0.498039, 0.643137, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.0823529, 0.192157, 0.298039, 1)
shader_parameter/ground_horizon_color = Color(0.27451, 0.498039, 0.643137, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15

[sub_resource type="Sky" id="Sky_lgo78"]
sky_material = SubResource("ShaderMaterial_4isa1")

[sub_resource type="Environment" id="Environment_3v2d5"]
background_mode = 2
background_energy_multiplier = 0.0
sky = SubResource("Sky_lgo78")
ambient_light_source = 3
ambient_light_sky_contribution = 0.0
reflected_light_source = 2
glow_enabled = true
fog_enabled = true
fog_light_color = Color(0.184314, 0.235294, 0.266667, 1)
fog_light_energy = 0.2
fog_density = 0.1
volumetric_fog_albedo = Color(0.0823529, 0.192157, 0.298039, 1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_oefqb"]
albedo_color = Color(0.666667, 0.666667, 0.666667, 1)
albedo_texture = ExtResource("1_7tsvx")
uv1_triplanar = true

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_un7tr"]
emission_shape = 3
emission_box_extents = Vector3(400, 1, 400)
angle_max = 360.0
direction = Vector3(1, -1, 0)
initial_velocity_min = 10.0
initial_velocity_max = 20.0
angular_velocity_min = 30.0
angular_velocity_max = 50.0
linear_accel_min = 1.0
linear_accel_max = 10.0
scale_min = 0.75
turbulence_noise_scale = 1.784
collision_mode = 2

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_6lsxu"]
transparency = 1
shading_mode = 0
albedo_color = Color(0.364706, 0.364706, 0.364706, 0.901961)
albedo_texture = ExtResource("3_cw5re")
billboard_mode = 3
billboard_keep_scale = true
particles_anim_h_frames = 1
particles_anim_v_frames = 1
particles_anim_loop = false

[sub_resource type="QuadMesh" id="QuadMesh_aausb"]
material = SubResource("StandardMaterial3D_6lsxu")

[sub_resource type="StyleBoxTexture" id="StyleBoxTexture_j0bk2"]
texture = ExtResource("9_w7hk4")
region_rect = Rect2(94.3569, 93.026, 404.624, 401.962)
modulate_color = Color(1, 1, 1, 0.541176)

[sub_resource type="Resource" id="Resource_pf16x"]
script = ExtResource("12_ng3kk")
item_data = ExtResource("11_4eb8d")
quantity = 1

[sub_resource type="Resource" id="Resource_es3jy"]
script = ExtResource("12_ng3kk")
item_data = ExtResource("11_4eb8d")
quantity = 1

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_sb84a"]
load_path = "res://.godot/imported/HideScrap32.png-6088f00a63efecec213426584903d392.ctex"

[sub_resource type="Resource" id="Resource_jbxkf"]
script = ExtResource("15_sw46l")
name = "[Hide Scrap]"
description = "
Rough, but useable."
stackable = false
texture = SubResource("CompressedTexture2D_sb84a")

[sub_resource type="Resource" id="Resource_i4d0b"]
script = ExtResource("12_ng3kk")
item_data = SubResource("Resource_jbxkf")
quantity = 8

[sub_resource type="Resource" id="Resource_gtp6f"]
script = ExtResource("12_ng3kk")
item_data = SubResource("Resource_jbxkf")
quantity = 1

[sub_resource type="Resource" id="Resource_lm827"]
script = ExtResource("10_gnfx3")
slot_datas = Array[ExtResource("12_ng3kk")]([SubResource("Resource_pf16x"), null, SubResource("Resource_es3jy"), SubResource("Resource_i4d0b"), SubResource("Resource_gtp6f")])

[sub_resource type="Resource" id="Resource_eutfx"]
script = ExtResource("12_ng3kk")
item_data = ExtResource("17_8xu6p")
quantity = 1

[sub_resource type="Resource" id="Resource_ma0st"]
script = ExtResource("12_ng3kk")
item_data = ExtResource("17_8xu6p")
quantity = 1

[sub_resource type="Resource" id="Resource_7c8d1"]
script = ExtResource("12_ng3kk")
item_data = ExtResource("17_8xu6p")
quantity = 1

[sub_resource type="Resource" id="Resource_cc431"]
script = ExtResource("12_ng3kk")
item_data = ExtResource("17_8xu6p")
quantity = 1

[sub_resource type="Resource" id="Resource_yr4aj"]
script = ExtResource("12_ng3kk")
item_data = ExtResource("11_4eb8d")
quantity = 1

[node name="World" type="Node3D"]
script = ExtResource("1_40num")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.866025, -0.299512, 0.400366, 0, 0.800731, 0.599024, -0.5, 0.51877, -0.693453, 0, 14.3946, 0)
visible = false
light_energy = 0.0
shadow_enabled = true

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_3v2d5")

[node name="Map" type="Node3D" parent="."]

[node name="StaticBody3D" type="StaticBody3D" parent="Map"]

[node name="CSGBox3D" type="CSGBox3D" parent="Map/StaticBody3D"]
use_collision = true
collision_mask = 5
size = Vector3(400, 0.01, 400)
material = SubResource("StandardMaterial3D_oefqb")

[node name="Player" parent="." instance=ExtResource("2_yjn56")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0679278, 0)
inventory_data = ExtResource("3_owqpx")

[node name="CSGBox3D" type="CSGBox3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -48.0398, 2.3153, 0)
size = Vector3(1, 5, 1)

[node name="GPUParticles3D" type="GPUParticles3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 20, 0)
amount = 100000
lifetime = 5.0
visibility_aabb = AABB(-400.803, -351.372, -506.755, 987.47, 353.38, 1024.57)
process_material = SubResource("ParticleProcessMaterial_un7tr")
draw_pass_1 = SubResource("QuadMesh_aausb")

[node name="GPUParticlesCollisionBox3D" type="GPUParticlesCollisionBox3D" parent="GPUParticles3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -19.8597, 0)
size = Vector3(400, 1, 400)

[node name="UI" type="CanvasLayer" parent="."]

[node name="InventoryInterface" type="Control" parent="UI"]
visible = false
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("6_tqy0d")
metadata/_edit_use_anchors_ = true

[node name="ColorRect" type="ColorRect" parent="UI/InventoryInterface"]
layout_mode = 0
offset_right = 1934.0
offset_bottom = 1097.0
mouse_filter = 2
color = Color(0, 0, 0, 0.541176)

[node name="PlayerInventory" parent="UI/InventoryInterface" instance=ExtResource("4_4m46i")]
layout_mode = 0
offset_left = 10.0
offset_top = 10.0
offset_right = 50.0
offset_bottom = 50.0

[node name="ExternalInventory" parent="UI/InventoryInterface" instance=ExtResource("4_4m46i")]
visible = false
layout_mode = 0
offset_left = 1232.0
offset_top = 308.0
offset_right = 1272.0
offset_bottom = 348.0

[node name="GrabbedSlot" parent="UI/InventoryInterface" instance=ExtResource("8_4g01v")]
visible = false
modulate = Color(1, 1, 1, 0.541176)
self_modulate = Color(1, 1, 1, 0)
layout_mode = 0
offset_right = 96.0
offset_bottom = 96.0
scale = Vector2(0.75, 0.75)

[node name="Panel" type="Panel" parent="UI"]
visible = false
anchors_preset = -1
anchor_left = 0.524
anchor_top = 0.644
anchor_right = 0.524
anchor_bottom = 0.644
offset_left = -161.08
offset_top = -0.520081
offset_right = 161.92
offset_bottom = 148.48
mouse_filter = 2
theme_override_styles/panel = SubResource("StyleBoxTexture_j0bk2")

[node name="Label" type="Label" parent="UI/Panel"]
layout_mode = 1
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -138.5
offset_top = -129.0
offset_right = 135.5
offset_bottom = 18.0
grow_horizontal = 2
grow_vertical = 0
size_flags_horizontal = 4
size_flags_vertical = 8
theme_override_fonts/font = ExtResource("9_uk1qn")
theme_override_font_sizes/font_size = 40
text = "[E] Take

[Can of Beans]


"
horizontal_alignment = 1

[node name="Chest" parent="." instance=ExtResource("9_sivul")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -8.91468)
inventory_data = SubResource("Resource_lm827")

[node name="PickUp_Hide" parent="." instance=ExtResource("15_w78xu")]
transform = Transform3D(0.597065, -0.802193, 0, 0.802193, 0.597065, 0, 0, 0, 1, -1.61649, 1.78117, -5.24271)
slot_data = SubResource("Resource_eutfx")

[node name="PickUp_Hide2" parent="." instance=ExtResource("15_w78xu")]
transform = Transform3D(0.597065, -0.802193, 0, 0.802193, 0.597065, 0, 0, 0, 1, -4.74243, 1.78117, -2.99339)
slot_data = SubResource("Resource_ma0st")

[node name="PickUp_Hide3" parent="." instance=ExtResource("15_w78xu")]
transform = Transform3D(0.597065, -0.802193, 0, 0.802193, 0.597065, 0, 0, 0, 1, 0.485549, 1.78117, -5.24271)
slot_data = SubResource("Resource_7c8d1")

[node name="PickUp_Hide4" parent="." instance=ExtResource("15_w78xu")]
transform = Transform3D(0.597065, -0.802193, 0, 0.802193, 0.597065, 0, 0, 0, 1, -2.95338, 1.78117, -8.42751)
slot_data = SubResource("Resource_cc431")

[node name="PickUp_Beans" parent="." instance=ExtResource("14_ir0xc")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.01906, 1.20525, -2.90428)
slot_data = SubResource("Resource_yr4aj")

[connection signal="drop_slot_data" from="UI/InventoryInterface" to="." method="_on_inventory_interface_drop_slot_data"]
[connection signal="gui_input" from="UI/InventoryInterface" to="UI/InventoryInterface" method="_on_gui_input"]
[connection signal="visibility_changed" from="UI/InventoryInterface" to="UI/InventoryInterface" method="_on_visibility_changed"]
